name: ci
on:
  workflow_run:
    workflows:
      - "lint and check tag"
    types:
      - completed

env:
  REGISTRY_IMAGE: reduct/store

jobs:
  publish_snap:
    name: Publish snap package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
    needs:
      - build_snap
      - api_tests
      - migration_test
      - replication_test
      - check_tag
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: reductstore
          path: .
      - name: Save snap name in environment variable
        run: |
          echo "SNAP_NAME=$(ls *.snap | cut  -f1 | grep ${{matrix.arch}})" >> $GITHUB_ENV
      - uses: snapcore/action-publish@master
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_LOGIN }}
        with:
          snap: ${{env.SNAP_NAME}}
          release: ${{ startsWith(github.ref, 'refs/tags/') && 'stable' || 'edge'}}


  publish_crate:
    runs-on: ubuntu-latest
    name: Publish crate
    needs:
      - api_tests
      - migration_test
      - replication_test
      - check_tag # Only publish on tags
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ vars.MINIMAL_RUST_VERSION }}
      - uses: arduino/setup-protoc@v1
        with:
          version: "3.x"
          repo-token: ${{ secrets.ACTION_GITHUB_TOKEN }}
      - name: Login
        run: |
          cargo login ${{ secrets.CRATES_IO_TOKEN }}
      - name: Publish reduct-base
        run: cargo publish -p reduct-base
      - name: Publish reduct-macros
        run: cargo publish -p reduct-macros
      - name: Publish reductstore
        run: cargo publish -p reductstore

  make_release:
    runs-on: ubuntu-latest
    needs:
      - api_tests
      - migration_test
      - replication_test
      - check_tag # Only publish on tags
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    name: Make release
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: softprops/action-gh-release@v2
        id: create_release
        with:
          draft: true
          prerelease: false
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: Copy changes from CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

  upload_release:
    runs-on: ubuntu-latest
    needs:
      - make_release
    name: Upload artifacts
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        target: [
          "x86_64-unknown-linux-gnu",
          "aarch64-unknown-linux-gnu",
          "x86_64-pc-windows-gnu",
          "x86_64-apple-darwin",
          "aarch64-apple-darwin",
        ]
    steps:
      - uses: actions/checkout@v4


      - name: Download ${{ matrix.target }} artifact
        uses: actions/download-artifact@v4
        with:
          name: reductstore-${{ matrix.target }}
          path: /tmp/
      - name: Archive binary for UNIX
        if: ${{ matrix.target != 'x86_64-pc-windows-gnu' }}
        run: |
          cd /tmp
          tar -czvf reductstore.${{ matrix.target }}.tar.gz reductstore

      - name: Archive binary for Windows
        if: ${{ matrix.target == 'x86_64-pc-windows-gnu' }}
        run: |
          cd /tmp
          zip -o reductstore.${{ matrix.target }}.zip reductstore.exe


      - name: Upload Linux Unix artifact
        if: ${{ matrix.target != 'x86_64-pc-windows-gnu' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.make_release.outputs.upload_url }}
          asset_path: /tmp/reductstore.${{ matrix.target }}.tar.gz
          asset_name: reductstore.${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Windows artifact
        if: ${{ matrix.target == 'x86_64-pc-windows-gnu' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.make_release.outputs.upload_url }}
          asset_path: /tmp/reductstore.${{ matrix.target }}.zip
          asset_name: reductstore.${{ matrix.target }}.zip
          asset_content_type: application/zip
