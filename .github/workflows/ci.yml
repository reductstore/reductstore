name: ci
on:
  push:
    branches: [ main, stable ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, stable ]
jobs:
  cpplint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build cpplint image
        run: docker build cpplint/ -t cpplint
      - name: Check code in /src
        run: docker run -v ${PWD}:/app cpplint bash -c "find src/ -name "*.cc" -o -name "*.h"  | xargs cpplint.py"
      - name: Check code in /unit_tests
        run: docker run -v ${PWD}:/app cpplint bash -c "find unit_tests/ -name "*.cc" -o -name "*.h"  | xargs cpplint.py"
      - name: Check code in /benchmarks
        run: docker run -v ${PWD}:/app cpplint bash -c "find benchmarks/ -name "*.cc" -o -name "*.h"  | xargs cpplint.py"

  build:
    runs-on: ubuntu-latest
    needs: cpplint
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{github.repository}}:latest
          outputs: type=docker,dest=/tmp/image.tar
          build-args: BUILD_TYPE=Debug
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: image
          path: /tmp/image.tar

  unit_tests:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp/
      - name: Load image
        run: |
          docker load --input /tmp/image.tar
          docker image ls -a
      - name: Run tests
        run: docker run ${{github.repository}} reduct-tests

  api_tests_without_auth:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp/
      - name: Load image
        run: |
          docker load --input /tmp/image.tar
          docker image ls -a
      - name: Build API tests
        run: docker build -t api_tests ./api_tests
      - name: Run Storage
        run: docker run --network=host -d ${{github.repository}}
      - name: Run API tests
        run: docker run --network=host api_tests

  api_tests_with_auth:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp/
      - name: Load image
        run: |
          docker load --input /tmp/image.tar
          docker image ls -a
      - name: Build API tests
        run: docker build -t api_tests ./api_tests
      - name: Run Storage
        run: docker run --network=host --env RS_API_TOKEN="XXXX" -d ${{github.repository}}
      - name: Run API tests
        run: docker run --network=host --env API_TOKEN="XXXX" api_tests

  api_tests_with_ssl:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp/
      - name: Load image
        run: |
          docker load --input /tmp/image.tar
          docker image ls -a
      - name: Build API tests
        run: docker build -t api_tests ./api_tests
      - name: Run Storage
        run: docker run --network=host -v ${PWD}/misc:/misc --env RS_CERT_PATH=/misc/certificate.crt --env RS_CERT_KEY_PATH=/misc/privateKey.key -d ${{github.repository}}
      - name: Run API tests
        run: docker run --network=host --env STORAGE_URL=https://127.0.0.1:8383 --env CURL_CA_BUNDLE="" api_tests

  push_image_github:
    runs-on: ubuntu-latest
    name: Push to Github Registry
    needs:
      - api_tests_with_auth
      - api_tests_without_auth
      - api_tests_with_ssl
      - unit_tests
    if: ${{ (github.ref == 'refs/heads/main') || (startsWith(github.event.ref, 'refs/tags/v')) }}
    steps:
      - uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/${{github.repository}}

      - name: Build and push Docker image to GitHub repo
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: deploy.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  push_image_dockerhub:
    runs-on: ubuntu-latest
    name: Push to DockerHub Registry
    needs:
      - api_tests_with_auth
      - api_tests_without_auth
      - api_tests_with_ssl
      - unit_tests
    if: ${{ startsWith(github.event.ref, 'refs/tags/v') }}
    steps:
      - uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:

          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: reductstorage/engine

      - name: Build and push Docker image to GitHub repo
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: deploy.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}