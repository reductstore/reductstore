// Copyright 2022 ReductStore
// This Source Code Form is subject to the terms of the Mozilla Public
//    License, v. 2.0. If a copy of the MPL was not distributed with this
//    file, You can obtain one at https://mozilla.org/MPL/2.0/.

syntax = "proto3";

package reduct.proto;

import "google/protobuf/timestamp.proto";

// Represents a stored blob in a block
message Record {
  enum State {
    kStarted = 0;     // has at least one chunk written
    kFinished = 1;    // finished without errors
    kErrored = 2;     // finished with error
    kInvalid = 3;     // something wierd happened
  }

  message Label {
    string name =1;
    string value = 2;
  }

  google.protobuf.Timestamp timestamp = 1;  // timestamp (works as ID)
  uint64 begin = 2;                         // begin position of a blob in a block
  uint64 end = 3;                           // end position of a blob in a block
  State state = 4;                          // state of record
  repeated Label labels = 5;                // labels
}

// Represents a block of records.
// The storage engine create a new block if the current one bigger than EntrySettings::max_block_size
message Block {
  message KeyValueMap {
    uint64 key = 1;
    string value = 2;
  }

  google.protobuf.Timestamp begin_time = 1;           // when the block started being recorded
  google.protobuf.Timestamp latest_record_time = 2;    // the timestamp of the latest record
  uint64 size = 3;                                // size of block in bytes (with protobuf overhead)
  repeated Record records = 4;                    // stored records
  bool invalid = 5;                               // mark block as invalid if some IO happened

}
